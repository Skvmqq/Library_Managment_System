@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "Main",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1478241800 { 
   	label=Librarian
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Librarian1478241800[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Librarian</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add_a_new_Book(library: Library, b: Book)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove_book(library: Library, b: Book)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1830861979 { 
   	label=Library
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Library1830861979[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Library</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   Students: List&lt;Student&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   books: List&lt;Book&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   librarians: List&lt;Librarian&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   user: List&lt;User&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addLibrarian(librarian: Librarian)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStudent(student: Student)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addabook(book: Book)</TD></TR>
<TR><TD ALIGN="LEFT" >+ display()</TD></TR>
<TR><TD ALIGN="LEFT" >+ displayLibrarians()</TD></TR>
<TR><TD ALIGN="LEFT" >+ displayStudents()</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBookByISBN(isbn: int): Book</TD></TR>
<TR><TD ALIGN="LEFT" >+ findBookByTitle(title: String): Book</TD></TR>
<TR><TD ALIGN="LEFT" ># findLibrarianByUsernameAndPassword(username: String, password: String): Librarian</TD></TR>
<TR><TD ALIGN="LEFT" ># findStudentByUsernameAndPassword(username: String, password: String): Student</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove_book(book: Book)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_2076425 { 
   	label=Book
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Book2076425[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Book</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   author: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   isbn: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   title: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_214492645 { 
   	label=Student
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Student214492645[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Student</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   borrowed_books: List&lt;Book&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ Borrow_book(library: Library, b: Book)</TD></TR>
<TR><TD ALIGN="LEFT" >+ Display_Borrowed_Books()</TD></TR>
<TR><TD ALIGN="LEFT" >+ Return_book(library: Library, b: Book)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_2390489 { 
   	label=Main
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Main2390489[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Main</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_2645995 { 
   	label=User
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   User2645995[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)User</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   User_name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   email_id: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   password: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   phone_number: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   user_id: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
Library1830861979 -> Book2076425[label="books
[0..*]"];
Library1830861979 -> Librarian1478241800[label="librarians
[0..*]"];
Library1830861979 -> Student214492645[label="Students
[0..*]"];
Library1830861979 -> User2645995[label="user
[0..*]"];
Student214492645 -> Book2076425[label="borrowed_books
[0..*]"];
Student214492645 -> Library1830861979[label="Return_book() -> addabook()"];
User2645995 -> Librarian1478241800[arrowhead=none, arrowtail=empty, dir=both];
User2645995 -> Student214492645[arrowhead=none, arrowtail=empty, dir=both];
    
}
@enduml